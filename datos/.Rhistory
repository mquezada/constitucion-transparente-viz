knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == min(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn.table <- one_nn[, list(map_country(c1), map_country(c2), dist.cos)]
one_nn.table <- one_nn.table[order(dist.cos)]
kable(one_nn.table[]) #, format="latex", booktabs=T)
knn.int.cos.pl <- knn.int.cos[order(dist.cos)]
knn.int.cos.pl <- knn.int.cos.pl[dist.cos < .1 & dist.cos > 0]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, dist.cos), y=reorder(c2, dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country") + scale_fill_gradient(trans="log")
knn.int.cos
knn.int.cos.pl <- knn.int.cos[order(dist.cos)]
knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1 & dist.cos > .5]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, dist.cos), y=reorder(c2, dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country") + scale_fill_gradient(trans="log")
knn.int.cos.pl <- knn.int.cos[order(dist.cos)]
knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1 & dist.cos > .9]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country") + scale_fill_gradient(trans="log")
ggplot(prot.most_similar, aes(x=reorder(country.x, -jacc.sim), y=reorder(country.y, -jacc.sim),
fill=jacc.sim, label=as.character(round(jacc.sim, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")+ scale_fill_gradient(trans="log")
knn.int.cos.pl
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
# knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1 & dist.cos > .9]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country") + scale_fill_gradient(trans="log")
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
# knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1 & dist.cos > .9]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == min(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn.table <- one_nn[, list(map_country(c1), map_country(c2), dist.cos)]
one_nn.table <- one_nn.table[order(dist.cos)]
kable(one_nn.table[]) #, format="latex", booktabs=T)
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
# knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1 & dist.cos > .9]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
knn.int.cos.pl
knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1]
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == min(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn.table <- one_nn[, list(map_country(c1), map_country(c2), dist.cos)]
one_nn.table <- one_nn.table[order(dist.cos)]
kable(one_nn.table[]) #, format="latex", booktabs=T)
knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1]
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == min(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn.table <- one_nn[, list(map_country(c1), map_country(c2), dist.cos)]
one_nn.table <- one_nn.table[order(-dist.cos)]
kable(one_nn.table[1:30]) #, format="latex", booktabs=T)
knn.int.cos.pl <- knn.int.cos.pl[dist.cos < 1]
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == min(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
knn.int.cos
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == max(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == max(dist.cos) & dist.cos < 1], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn
one_nn <- knn.int.cos[dist.cos != 0]
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 0]
one_nn <- one_nn[one_nn[, .I[dist.cos == min(1, max(dist.cos))], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 1]
one_nn <- one_nn[one_nn[, .I[dist.cos == max(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(dist.cos)])
one_nn
knn.int.cos <- data.table(read.table('~/galean/scripts/queries/data/knn_int_cos2.txt',
header=F, sep='\t',
stringsAsFactors = T, na.strings = ''))
setnames(knn.int.cos, c("V1", "V2", "V3"), c("c1", "c2", "dist.cos"))
one_nn <- knn.int.cos[dist.cos != 1]
one_nn <- one_nn[one_nn[, .I[dist.cos == max(dist.cos)], by=c1]$V1]
one_nn <- na.omit(one_nn[order(-dist.cos)])
one_nn.table <- one_nn[, list(map_country(c1), map_country(c2), dist.cos)]
one_nn.table <- one_nn.table[order(-dist.cos)]
kable(one_nn.table[1:30]) #, format="latex", booktabs=T)
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)][1:20]
ggplot(knn.int.cos.pl, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
knn.int.cos.pl <- knn.int.cos[order(-dist.cos)]
knn.int.cos.pl
one_nn
ggplot(one_nn, aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
one_nn
one_nn[1:10]
ggplot(one_nn[1:30], aes(x=reorder(c1, -dist.cos), y=reorder(c2, -dist.cos),
fill=dist.cos, label=as.character(round(dist.cos, 2)))) +
geom_tile(size=.1) + fte_theme() +
geom_text(size=2, color=palette[1]) +
scale_x_discrete(labels=map_country) + scale_y_discrete(labels=map_country) +
theme(axis.text.x=element_text(size=7, angle=45, hjust=1),
axis.text.y=element_text(size=7)) +
labs(x="Country", y="Country")
kable(one_nn.table[1:30]) #, format="latex", booktabs=T)
knn.int.cos
one_nn
one_nn[1:30]
part.wrt.all <- part.frac.all %>%
full_join(prot, by=c("component_id")) %>%
filter(!is.na(country_code)) %>%
mutate(c.interested=country,
c.protagonist=country_code) %>%
select(component_id, c.interested, c.protagonist, interest) %>%
group_by(c.interested, c.protagonist) %>%
summarise(avg.interest=mean(interest))
part.wrt.all <- data.table(na.omit(part.wrt.all))
selected_pairs = list(c("FO", "SJ"), c("MY", "UA"), c("FJ", "VU"),
c("RS", "TM"), c("CN", "DE"), c("PY", "TJ"),
c("NL", "MY"), c("BO", "TL"), c("GA", "TL"),
c("AU", "DE"), c("PL", "TR"), c("IN", "AU"),
c("AT", "IQ"), c("KE", "YE"), c("AM", "VA"))
for(pair in selected_pairs) {
print(paste(map_country(pair), collapse = " & "))
tmp <- part.wrt.all[c.protagonist %in% pair]
p <- ggplot(tmp,
aes(x=reorder(c.interested, avg.interest),
y=avg.interest,
color=factor(c.protagonist, levels=pair),
shape=factor(c.protagonist, levels=pair))) +
geom_point(size=1, position="jitter", alpha=1) +
# geom_smooth(aes(x=reorder(c.interested, avg.interest), y=avg.interest, group=c.protagonist), size=.5) +
xlab("Interested countries") +
ylab("Interest") +
fte_theme() + theme(axis.text.x = element_blank()) +
theme(legend.justification=c(0, 1), legend.position=c(0,1),
legend.background = element_rect(fill="transparent"),
legend.key.height=unit(1.8,"line"),
axis.text=element_text(size=6)) +
scale_y_continuous(breaks=seq(0, 1, by=0.1), limits=c(0, 1.1)) +
scale_color_discrete(name="Protagonist Country",
breaks=pair,
labels=map_country(pair)) +
scale_shape_discrete(name="Protagonist Country",
breaks=pair,
solid=F,
labels=map_country(pair))
# scale_x_discrete(labels=map_country)
print(p + ggtitle(paste(map_country(pair), collapse = " & ")))
ggsave(paste(c(PDF_PATH, paste(c("int-prot-all", pair), collapse = "-"), ".eps"),
collapse = ""),
p, dpi=pl.DPI, width=pl.W, height=pl.H)
ggsave(paste(c(PDF_PATH, paste(c("int-prot-all", pair), collapse = "-"), ".pdf"),
collapse = ""),
p, dpi=pl.DPI, width=pl.W, height=pl.H)
}
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
setwd('~/EL/')
setwd('~/EL/datos/')
raw <- fread('ELAs 20160616-00_30 - Raw.csv')
library(data.table)
library(ggplot2)
raw <- fread('ELAs 20160616-00_30 - Raw.csv')
comunas <- fread('ELAs 20160616-00_30 - Comunas.csv')
regiones <- fread('ELAs 20160616-00_30 - Sheet8.csv')
regiones
ggplot(regiones, aes(x=Region, y=ELAsPorRegion)) + geom_bar()
geom_bar(stat="identity")
ggplot(regiones, aes(x=Region, y=ELAsPorRegion)) +
geom_bar(stat="identity")
coord_flip()
ggplot(regiones, aes(x=Region, y=ELAsPorRegion)) +
geom_bar(stat="identity") +
coord_flip()
fte_theme <- function() {
# Generate the colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.axis.text = palette[6]
color.axis.title = palette[7]
color.title = palette[9]
# Begin construction of chart
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=7,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, size=15, vjust=1.25)) +
theme(axis.text.x=element_text(size=10,color=color.axis.text, angle=315, hjust=0.4)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text)) +
theme(axis.title.x=element_text(size=15,color=color.axis.title, vjust=0)) +
theme(axis.title.y=element_text(size=15,color=color.axis.title, vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
ggplot(regiones, aes(x=Region, y=ELAsPorRegion)) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
library(RColorBrewer)
library(data.table)
library(ggplot2)
fte_theme <- function() {
# Generate the colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.axis.text = palette[6]
color.axis.title = palette[7]
color.title = palette[9]
# Begin construction of chart
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=7,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, size=15, vjust=1.25)) +
theme(axis.text.x=element_text(size=10,color=color.axis.text, angle=315, hjust=0.4)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text)) +
theme(axis.title.x=element_text(size=15,color=color.axis.title, vjust=0)) +
theme(axis.title.y=element_text(size=15,color=color.axis.title, vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
setwd('~/EL/datos/')
# todos los datos
raw <- fread('ELAs 20160616-00_30 - Raw.csv')
# por comuna
comunas <- fread('ELAs 20160616-00_30 - Comunas.csv')
# por region y poblacion
regiones <- fread('ELAs 20160616-00_30 - Sheet8.csv')
ggplot(regiones, aes(x=Region, y=ELAsPorRegion)) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
ggplot(regiones, aes(x=Region, y=ELAsPorRegion, col="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
ggplot(regiones, aes(x=Region, y=ELAsPorRegion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
ggplot(regiones, aes(x=reorder(Region, ELAsPorRegion), y=ELAsPorRegion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
regiones
ggplot(regiones, aes(x=reorder(V3, ELAsPorRegion), y=ELAsPorRegion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
regiones <- fread('ELAs 20160616-00_30 - Estaticos-Regiones.csv')
ggplot(regiones, aes(x=reorder(V3, ELAsPorRegion), y=ELAsPorRegion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
ggplot(regiones, aes(x=reorder(Nombre, ELAsPorRegion), y=ELAsPorRegion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
fte_theme()
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
xlab("Población") +
ylab("Región")
fte_theme()
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
fte_theme()
install.packages("plotly")
library(scales)
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
scale_y_continuous(labels = "comma") +
fte_theme()
regiones
na.omit(regiones)
ggplot(na.omit(regiones), aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
scale_y_continuous(labels = "comma") +
fte_theme()
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región")
source('~/EL/datos/vis-EL.R', echo=TRUE)
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion, fill="red")) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región")
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región")
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity", fill="red") +
coord_flip() +
ylab("Población") +
xlab("Región")
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity", fill="steelred") +
coord_flip() +
ylab("Población") +
xlab("Región")
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity", fill="#D55E00") +
coord_flip() +
ylab("Población") +
xlab("Región")
library(plotly)
ggplotly(p)
p <- ggplot(regiones, aes(x=reorder(Nombre, Poblacion, fill="red"), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
scale_y_continuous(labels = "comma") +
fte_theme()
ggplotly(p)
p <- ggplot(regiones, aes(x=reorder(Nombre, Poblacion, fill="red"), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
fte_theme()
ggplotly(p)
p <- ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
fte_theme()
ggplotly(p)
p <- ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
fte_theme()
(gg <- ggplotly(p))
gg
(gg <- ggplotly(p))
plotly_POST(gg, filename = "regiones",
world_readable=TRUE)
plotly_POST(gg)
p <- ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
fte_theme()
ggplot(regiones, aes(x=reorder(Nombre, Poblacion), y=Poblacion)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Población") +
xlab("Región") +
fte_theme()
